{"version":3,"sources":["../../../src/api/sms/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaCreate","Joi","object","sid","string","optional","code","email","password","sender","sender_as","recipient","required","message","created_by","schema","type","String","unique","index","default","SMS","SENDER","direction","enum","delivery_status","ref","options","DATABASE","OPTIONS","newSchema","set","Sms","model"],"mappings":";;;;;;;AAWA;;;;AACA;;;;AACA;;AACA;;;;;;AAdA;;;;;;;;;;;IAgBQA,M,GAAWC,kB,CAAXD,M;IACAE,Q,GAAaF,OAAOG,K,CAApBD,Q;AAED,IAAME,sCAAeC,cAAIC,MAAJ,CAAW;AACnCC,SAAKF,cAAIG,MAAJ,GAAaC,QAAb,EAD8B;AAEnCC,UAAML,cAAIG,MAAJ,GAAaC,QAAb,EAF6B;AAGnCE,WAAON,cAAIG,MAAJ,GAAaC,QAAb,EAH4B;AAInCG,cAAUP,cAAIG,MAAJ,GAAaC,QAAb,EAJyB;AAKnCI,YAAQR,cAAIG,MAAJ,GAAaC,QAAb,EAL2B;AAMnCK,eAAWT,cAAIG,MAAJ,GAAaC,QAAb,EANwB;AAOnCM,eAAWV,cAAIG,MAAJ,GAAaQ,QAAb,EAPwB;AAQnCC,aAASZ,cAAIG,MAAJ,GAAaQ,QAAb,EAR0B;AASnCE,gBAAYb,cAAIG,MAAJ,GAAaQ,QAAb;AATuB,CAAX,CAArB;;AAYA,IAAMG,0BAAS;AAClBZ,SAAK,EAAEa,MAAMC,MAAR,EADa;AAElBX,UAAM,EAAEU,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EAAgCM,QAAQ,IAAxC,EAA8CC,OAAO,IAArD,EAFY;AAGlBV,YAAQ,EAAEO,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EAAgCQ,SAASC,eAAIC,MAA7C,EAHU,EAG6C;AAC/DZ,eAAW,EAAEM,MAAMC,MAAR,EAAgBG,SAASC,eAAIC,MAA7B,EAJO,EAIgC;AAClDX,eAAW,EAAEK,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EALO,EAK2B;AAC7CC,aAAS,EAAEG,MAAMC,MAAR,EAAgBL,UAAU,IAA1B,EANS;AAOlBW,eAAW,EAAEP,MAAMC,MAAR,EAAgBO,MAAM,CAAC,SAAD,EAAY,UAAZ,CAAtB,EAA+CJ,SAAS,UAAxD,EAPO;AAQlBK,qBAAiB,EAAET,MAAMC,MAAR,EARC;AASlBH,gBAAY,EAAEE,MAAMlB,QAAR,EAAkB4B,KAAK,MAAvB,EAA+Bd,UAAU,IAAzC;AATM,CAAf;;AAYP,IAAMe,UAAUC,oBAASC,OAAzB;;AAEA,IAAMC,YAAY,IAAIlC,MAAJ,CAAWmB,MAAX,EAAmBY,OAAnB,CAAlB;AACAG,UAAUC,GAAV,CAAc,YAAd,EAA4B,KAA5B;;AAEA,IAAMC,MAAMnC,mBAASoC,KAAT,CAAe,KAAf,EAAsBH,SAAtB,CAAZ;;kBAEeE,G","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {ObjectId} id Sms primaryKey\n * @property {String} sender Sms registered sending phone\n * @property {String} sender_as Sms sender's name or phone\n * @property {String} recipient Sms recipient phone\n * @property {String} message Sms message\n * @property {String} direction Sms direction INBOUND|OUTBOUND\n * @property {String} delivery_status Sms delivery status: queued|failed|sent|delivered|undelivered\n * @description Sms model holds record of all internal and external sms via ERP\n */\nimport Joi from \"@hapi/joi\";\nimport mongoose from \"mongoose\";\nimport { DATABASE, SMS } from \"../../constants\";\nimport User from \"../user/model\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaCreate = Joi.object({\n    sid: Joi.string().optional(),\n    code: Joi.string().optional(),\n    email: Joi.string().optional(),\n    password: Joi.string().optional(),\n    sender: Joi.string().optional(),\n    sender_as: Joi.string().optional(),\n    recipient: Joi.string().required(),\n    message: Joi.string().required(),\n    created_by: Joi.string().required(),\n});\n\nexport const schema = {\n    sid: { type: String },\n    code: { type: String, required: true, unique: true, index: true },\n    sender: { type: String, required: true, default: SMS.SENDER }, // Phone\n    sender_as: { type: String, default: SMS.SENDER }, // Sender's name\n    recipient: { type: String, required: true }, // Phones\n    message: { type: String, required: true },\n    direction: { type: String, enum: [\"INBOUND\", \"OUTBOUND\"], default: \"OUTBOUND\" },\n    delivery_status: { type: String },\n    created_by: { type: ObjectId, ref: \"User\", required: true },\n};\n\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.set(\"collection\", \"sms\");\n\nconst Sms = mongoose.model(\"Sms\", newSchema);\n\nexport default Sms;\n"]}