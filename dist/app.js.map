{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","app","port","process","env","PORT","defaultPath","path","join","__dirname","use","bodyParser","urlencoded","extended","limit","json","express","static","database","on","console","error","bind","once","log","get","req","res","render","next","locals","userId","userType","role","apiRoutes","Error","status","success","message","payload","listen"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP;AACA,IAAMC,MAAM,wBAAZ;;AAEA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,cAAcC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAApB;;AAEAR,IAAIS,GAAJ,CAAQ,uBAAR;AACAT,IAAIS,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAkBC,OAAO,MAAzB,EAAtB,CAAR;AACAb,IAAIS,GAAJ,CAAQC,qBAAWI,IAAX,CAAgB,EAAED,OAAO,MAAT,EAAhB,CAAR;AACAb,IAAIS,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAT,IAAIS,GAAJ,CAAQ,qBAAR;AACAT,IAAIS,GAAJ,CAAQ,4BAAR;AACAT,IAAIS,GAAJ,CAAQM,kBAAQC,MAAR,CAAeX,WAAf,CAAR;;AAEAY,iBAASC,EAAT,CAAY,OAAZ,EAAqBC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAArB;AACAF,iBAASK,IAAT,CAAc,MAAd,EAAsB,YAAM;AACxBH,YAAQI,GAAR,CAAY,yCAAZ;AACH,CAFD;;AAIAvB,IAAIwB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBP,YAAQI,GAAR,CAAY,cAAZ,EAA4BlB,WAA5B;AACAqB,QAAIC,MAAJ,CAActB,WAAd;AACH,CAHD;;AAKA;AACAL,IAAIS,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AACxBF,QAAIG,MAAJ,CAAWC,MAAX,GAAoB,GAApB;AACAJ,QAAIG,MAAJ,CAAWE,QAAX,GAAsB,WAAtB;AACAL,QAAIG,MAAJ,CAAWG,IAAX,GAAkB,EAAlB;AACAJ;AACH,CALD;;AAOA;AACA5B,IAAIS,GAAJ,CAAQ,SAAR,EAAmBwB,aAAnB;;AAEAjC,IAAIS,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AACxB,QAAMR,QAAQ,IAAIc,KAAJ,CAAU,mCAAV,CAAd;AACAd,UAAMe,MAAN,GAAe,GAAf;AACAP,SAAKR,KAAL;AACH,CAJD;;AAMApB,IAAIS,GAAJ,CAAQ,UAACW,KAAD,EAAQK,GAAR,EAAaC,GAAb,EAAkBE,IAAlB,EAA2B;AAC/BF,QAAIS,MAAJ,CAAWf,MAAMe,MAAN,IAAgB,GAA3B;AACAT,QAAIZ,IAAJ,CAAS;AACLsB,iBAAS,KADJ;AAELC,0CAAgCjB,MAAMiB,OAFjC;AAGLC,iBAAS;AAHJ,KAAT;AAKAV;AACH,CARD;;AAUA;AACA5B,IAAIuC,MAAJ,CAAWtC,IAAX,EAAiB,YAAM;AACnBkB,YAAQI,GAAR,kCAA2CtB,IAA3C;AACH,CAFD;;kBAIeD,G","file":"app.js","sourcesContent":["import \"babel-polyfill\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport morgan from \"morgan\";\nimport dotenv from \"dotenv\";\nimport cors from \"cors\";\n\nimport compression from \"compression\";\nimport path from \"path\";\nimport helmet from \"helmet\";\n\nimport apiRoutes from \"./api\";\nimport database from \"./config\";\n\ndotenv.config();\nconst app = express();\n\nconst port = process.env.PORT || 8000;\nconst defaultPath = path.join(__dirname, \"/public\");\n\napp.use(helmet());\napp.use(bodyParser.urlencoded({ extended: true, limit: \"50mb\" }));\napp.use(bodyParser.json({ limit: \"50mb\" }));\napp.use(morgan(\"dev\"));\napp.use(cors());\napp.use(compression());\napp.use(express.static(defaultPath));\n\ndatabase.on(\"error\", console.error.bind(console, \"Connection error:\"));\ndatabase.once(\"open\", () => {\n    console.log(\"Successfully connected to the database!\");\n});\n\napp.get(\"/\", (req, res) => {\n    console.log(\"defaultPath \", defaultPath);\n    res.render(`${defaultPath}/index.html`);\n});\n\n// modify request object\napp.use((req, res, next) => {\n    res.locals.userId = 0.0;\n    res.locals.userType = \"anonymous\";\n    res.locals.role = \"\";\n    next();\n});\n\n// Use Routes\napp.use(\"/api/v1\", apiRoutes);\n\napp.use((req, res, next) => {\n    const error = new Error(\"Api route requested is not found!\");\n    error.status = 404;\n    next(error);\n});\n\napp.use((error, req, res, next) => {\n    res.status(error.status || 500);\n    res.json({\n        success: false,\n        message: `SMS Portal API says ${error.message}`,\n        payload: null,\n    });\n    next();\n});\n\n// listen for requests\napp.listen(port, () => {\n    console.log(`Server is listening on port ${port}`);\n});\n\nexport default app;\n"]}