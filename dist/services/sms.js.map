{"version":3,"sources":["../../src/services/sms.js"],"names":["recipient","message","sender","Error","data","from","formatPhone","body","to","client","messages","create","result","sendSmsAsync","req","res","twiml","twilio","TwimlResponse","toString","send","receiveSms","require","dotenv","SMS","config","accountSid","process","env","TWILIO_ACCOUNT_SID","authToken","TWILIO_AUTH_TOKEN","SENDER","phone","str","trim","length","slice","sendSms","then","console","log","sid","catch","error","err","readMultipleSms","each"],"mappings":";;;;;;;uEAsCA,iBAA4BA,SAA5B,EAAuCC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACUC,UAAUF,SAAV,IAAuBC,OADjC;AAAA;AAAA;AAAA;;AAAA,8BACiD,IAAIE,KAAJ,CAAU,6BAAV,CADjD;;AAAA;AAAA;AAGcC,4BAHd,GAGqB;AACTC,kCAAMC,YAAYJ,MAAZ,CADG;AAETK,kCAAMN,OAFG;AAGTO,gCAAIF,YAAYN,SAAZ;AAHK,yBAHrB;AAAA;AAQuB,+BAAMS,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBP,IAAvB,CAAN;;AARvB;AAQcQ,8BARd;AAAA,yDASeA,MATf;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,Y;;;;;AAef;;;;;;;wEAIA,kBAA0BC,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,6BADV,GACkB,IAAIC,OAAOC,aAAX,EADlB;;AAEIF,8BAAMf,OAAN,CAAc,0BAAd;AACMA,+BAHV,GAGoBe,MAAMG,QAAN,EAHpB;;AAIIJ,4BAAIK,IAAJ,CAASnB,OAAT;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeoB,U;;;;;AAOf;;;;;AAhEA,IAAMJ,SAASK,QAAQ,QAAR,CAAf;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;;eACgBA,QAAQ,cAAR,C;IAARE,G,YAAAA,G;;AAER;;AAEAD,OAAOE,MAAP;;AAEA,IAAMC,aAAaC,QAAQC,GAAR,CAAYC,kBAA/B;AACA,IAAMC,YAAYH,QAAQC,GAAR,CAAYG,iBAA9B;AACA;AACA,IAAMtB,SAAS,IAAIQ,MAAJ,CAAWS,UAAX,EAAuBI,SAAvB,CAAf;AACA,IAAM5B,SAASsB,IAAIQ,MAAnB;;AAEA,SAAS1B,WAAT,CAAqB2B,KAArB,EAA4B;AACxB,QAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AACZ,QAAIC,MAAMD,MAAME,IAAN,EAAV;AACA,QAAID,IAAIE,MAAJ,KAAe,EAAf,IAAqBF,IAAK,CAAL,MAAa,GAAtC,EAA2C;AACvCA,uBAAaA,IAAIG,KAAJ,CAAU,CAAV,CAAb;AACH;AACD,QAAIH,IAAIE,MAAJ,KAAe,EAAnB,EAAuB;AACnBF,uBAAaA,GAAb;AACH;AACD,WAAOA,GAAP;AACH;;AAED,SAASI,OAAT,CAAiBtC,SAAjB,EAA4BC,OAA5B,EAAqC;AACjC,QAAI,EAAEC,UAAUF,SAAV,IAAuBC,OAAzB,CAAJ,EAAuC,MAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AACvC,QAAMC,OAAO;AACTC,cAAMC,YAAYJ,MAAZ,CADG;AAETK,cAAMN,OAFG;AAGTO,YAAIF,YAAYN,SAAZ;AAHK,KAAb;AAKAS,WAAOC,QAAP,CAAgBC,MAAhB,CAAuBP,IAAvB,EACKmC,IADL,CACU;AAAA,eAAUC,QAAQC,GAAR,CAAY7B,OAAO8B,GAAnB,CAAV;AAAA,KADV,EAEKC,KAFL,CAEW;AAAA,eAAOH,QAAQI,KAAR,CAAcC,GAAd,CAAP;AAAA,KAFX;AAGH;;AA6BD,SAASC,eAAT,GAA2B;AACvBrC,WAAOC,QAAP,CAAgBqC,IAAhB,CAAqB;AAAA,eAAYP,QAAQC,GAAR,CAAY/B,SAASgC,GAArB,CAAZ;AAAA,KAArB;AACH;;QAEQJ,O,GAAAA,O;QAASzB,Y,GAAAA,Y;QAAcQ,U,GAAAA,U;QAAYyB,e,GAAAA,e","file":"sms.js","sourcesContent":["const twilio = require(\"twilio\");\nconst dotenv = require(\"dotenv\");\nconst { SMS } = require(\"../constants\");\n\n//  * https://www.twilio.com/docs/sms/api/message-resource#read-multiple-message-resources\n\ndotenv.config();\n\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\n// eslint-disable-next-line new-cap\nconst client = new twilio(accountSid, authToken);\nconst sender = SMS.SENDER;\n\nfunction formatPhone(phone) {\n    if (!phone) return null;\n    let str = phone.trim();\n    if (str.length === 11 && str[ 0 ] === \"0\") {\n        str = `+234${str.slice(1)}`;\n    }\n    if (str.length === 10) {\n        str = `+234${str}`;\n    }\n    return str;\n}\n\nfunction sendSms(recipient, message) {\n    if (!(sender && recipient && message)) throw new Error(\"Invalid sendSms params\");\n    const data = {\n        from: formatPhone(sender),\n        body: message,\n        to: formatPhone(recipient),\n    };\n    client.messages.create(data)\n        .then(result => console.log(result.sid))\n        .catch(err => console.error(err));\n}\n\nasync function sendSmsAsync(recipient, message) {\n    if (!(sender && recipient && message)) throw new Error(\"Invalid sendSmsAsync params\");\n    try {\n        const data = {\n            from: formatPhone(sender),\n            body: message,\n            to: formatPhone(recipient),\n        };\n        const result = await client.messages.create(data);\n        return result;\n    } catch (err) {\n        return err;\n    }\n}\n\n/**\n * Twilio Webhook for receiving sms\n * Receive message via this webhook set at the twilio user settings\n */\nasync function receiveSms(req, res) {\n    const twiml = new twilio.TwimlResponse();\n    twiml.message(\"Twilio incoming message:\");\n    const message = twiml.toString();\n    res.send(message);\n}\n\n// Read Multiple SMS Records\nfunction readMultipleSms() {\n    client.messages.each(messages => console.log(messages.sid));\n}\n\nexport { sendSms, sendSmsAsync, receiveSms, readMultipleSms };\n"]}