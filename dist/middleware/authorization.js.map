{"version":3,"sources":["../../src/middleware/authorization.js"],"names":["req","res","next","query","code","email","password","apiKey","toLowerCase","token","getToken","User","findOne","or","api_key","api_access","exec","user","id","_id","type","phone","credit","method","body","created_by","updated_by","JWT","jwtSecret","err","decoded","checkAuth","isValidUser","isValidCustomer","isValidAdmin","headers","authorization","split","console","log"],"mappings":"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","file":"authorization.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\nimport { JWT } from \"../constants\";\nimport { fail } from \"../lib/response\";\nimport { hasProp } from \"../lib/helpers\";\nimport User from \"../api/user/model\";\n\n// Retrieve token from request header\nexport function getToken(req) {\n    if (req.headers.authorization && req.headers.authorization.split(\" \")[ 0 ] === \"Bearer\") {\n        return req.headers.authorization.split(\" \")[ 1 ];\n    } if (req.query && hasProp(req.query, \"token\")) {\n        return req.query.token;\n    }\n    return null;\n}\n\n// eslint-disable-next-line complexity\nexport async function checkAuth(req, res, next) {\n    const { code, email, password } = req.query;\n    const apiKey = code ? code.toLowerCase() : \"\";\n    const token = getToken(req);\n    if (!token) {\n        const user = await User.findOne().or([\n            { api_key: apiKey, api_access: true },\n            { email, password, api_access: true },\n        ]).exec();\n        if (!user) return fail(res, 403, \"Token or user not found in request header!\");\n        req.user = {\n            id: user._id,\n            type: user.type,\n            email: user.email,\n            phone: user.phone,\n            credit: user.credit,\n        };\n        if (req.method === \"POST\" && (code || email)) {\n            req.body.created_by = `${req.user.id}`;\n        } else if (req.method === \"PUT\" && (code || email)) {\n            req.body.updated_by = `${req.user.id}`;\n        }\n        return next();\n    }\n    return verify(token, JWT.jwtSecret, (err, decoded) => {\n        if (err) return fail(res, 403, \"Failed to authenticate token.!\");\n        req.user = {\n            id: decoded.id,\n            type: decoded.type,\n            email: decoded.email,\n            phone: decoded.phone,\n            credit: decoded.credit,\n        };\n        if (req.method === \"POST\") {\n            req.body.created_by = decoded.id;\n        } else if (req.method === \"PUT\") {\n            req.body.updated_by = decoded.id;\n        }\n        return next();\n    });\n}\n\n/*\nexport function getUser(req) {\n    let user = \"\";\n    Promise(resolve, reject) {\n        try {\n            const token = getToken(req);\n            return verify(token, JWT.jwtSecret, (err, decoded) => {\n                user = { decoded };\n                resolve(user);\n            });\n        } catch(err){\n            reject(err);\n        }\n    }\n}\n*/\n\nexport function isValidUser(req, res, next) {\n    const { type, id, email } = req.user;\n    if (!(type === \"CUSTOMER\" || type === \"ADMIN\")) return fail(res, 403, \"Invalid User credentials!\");\n    console.log(\"Validating User: \", type, id, email);\n    return next();\n}\n\nexport function isValidCustomer(req, res, next) {\n    const { type, id, email } = req.user;\n    if (type !== \"CUSTOMER\") return fail(res, 403, \"Invalid Customer credentials!\");\n    console.log(\"Validating Customer: \", type, id, email);\n    return next();\n}\n\nexport function isValidAdmin(req, res, next) {\n    const { type, id, email } = req.user;\n    if (type !== \"ADMIN\") return fail(res, 403, \"Invalid Admin credentials!\");\n    console.log(\"Validating Admin: \", type, id, email);\n    return next();\n}\n"]}