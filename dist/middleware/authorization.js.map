{"version":3,"sources":["../../src/middleware/authorization.js"],"names":["getToken","checkAuth","isValidUser","isValidCustomer","isValidAdmin","req","headers","authorization","split","query","token","res","next","JWT","jwtSecret","err","decoded","user","id","type","email","phone","method","body","created_by","updated_by","console","log"],"mappings":"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","file":"authorization.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\nimport { JWT } from \"../constants\";\nimport { fail } from \"../lib/response\";\nimport { hasProp } from \"../lib/helpers\";\n\n// Retrieve token from request header\nexport function getToken(req) {\n    if (req.headers.authorization && req.headers.authorization.split(\" \")[ 0 ] === \"Bearer\") {\n        return req.headers.authorization.split(\" \")[ 1 ];\n    } if (req.query && hasProp(req.query, \"token\")) {\n        return req.query.token;\n    }\n    return null;\n}\n\nexport function checkAuth(req, res, next) {\n    const token = getToken(req);\n    if (!token) return fail(res, 403, \"No token found in request header!\");\n    return verify(token, JWT.jwtSecret, (err, decoded) => {\n        if (err) return fail(res, 403, \"Failed to authenticate token.!\");\n        req.user = {\n            id: decoded.id,\n            type: decoded.type,\n            email: decoded.email,\n            phone: decoded.phone,\n        };\n        if (req.method === \"POST\") {\n            req.body.created_by = decoded.id;\n        } else if (req.method === \"PUT\") {\n            req.body.updated_by = decoded.id;\n        }\n        return next();\n    });\n}\n\n/*\nexport function getUser(req) {\n    let user = \"\";\n    Promise(resolve, reject) {\n        try {\n            const token = getToken(req);\n            return verify(token, JWT.jwtSecret, (err, decoded) => {\n                user = { decoded };\n                resolve(user);\n            });\n        } catch(err){\n            reject(err);\n        }\n    }\n}\n*/\n\nexport function isValidUser(req, res, next) {\n    const { type, id, email } = req.user;\n    if (!(type === \"CUSTOMER\" || type === \"ADMIN\")) return fail(res, 403, \"Invalid User credentials!\");\n    console.log(\"\\nValidating User: \", type, id, email);\n    return next();\n}\n\nexport function isValidCustomer(req, res, next) {\n    const { type, id, email } = req.user;\n    if (type !== \"CUSTOMER\") return fail(res, 403, \"Invalid Customer credentials!\");\n    console.log(\"\\nValidating Customer: \", type, id, email);\n    return next();\n}\n\nexport function isValidAdmin(req, res, next) {\n    const { type, id, email } = req.user;\n    if (type !== \"ADMIN\") return fail(res, 403, \"Invalid Admin credentials!\");\n    console.log(\"\\nValidating Admin: \", type, id, email);\n    return next();\n}\n"]}