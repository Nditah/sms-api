{"version":3,"sources":["../../src/lib/helpers.js"],"names":["toObjectId","timestamp","dateDaysAgo","randomNum","cloneObject","getObjectByKey","getSettings","addToArrayOfObjects","getClientAccess","hasProp","isObjecId","generateOtp","hash","cleanDeepObject","cleanObject","nextDate","genCode","hasNull","stringToArrayPhone","baseId","mysqlId","oldId","toString","a","repeat","length","Date","toISOString","slice","since","today","setDate","getDate","Math","floor","random","model","source","Object","assign","arrayObject","key","value","find","obj","arrObj","Obj","item","name","result","arrayOfObjects","limit","newObjectElement","size","keys","push","splice","req","ipAddress","ip","_remoteAddress","accessDate","_startTime","prop","prototype","hasOwnProperty","call","id","match","num","str","bcryptjs","hashSync","JWT","saltRounds","propName","depth","d","genString","text","possible","i","charAt","daysIntoYear","date","UTC","getFullYear","getMonth","len","substr","val","values","includes","undefined","arr","split","map","st","trim","filtered","filter","index","Set"],"mappings":"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","file":"helpers.js","sourcesContent":["import bcryptjs from \"bcryptjs\";\nimport { JWT } from \"../constants\";\n\nexport function toObjectId(baseId = \"5951bc91860d8b5ba\", mysqlId = 1) {\n    const oldId = mysqlId.toString(10);\n    const a = \"0\".repeat(7 - oldId.length);\n    return baseId + a + oldId;\n}\n\nexport function timestamp() {\n    return `${new Date().toISOString().slice(0, 22)}Z`;\n    //   return new Date().toISOString().slice(0, 19).replace(\"T\", \" \")+\"Z\";\n}\n\nexport function dateDaysAgo(since = 0) {\n    const today = new Date();\n    today.setDate(today.getDate() - since);\n    return today.toISOString();\n}\n\nexport function randomNum() {\n    return Math.floor(Math.random() * 1000000);\n}\n\nexport function cloneObject(model = {}, source) {\n    return Object.assign(model, source);\n}\n\n/**\n * @description getObjectByKey returns the object from an Array of\n * Objects that has the key with a given value or undefined!\n * @param {Array} arrayObject Array of Objects\n * @param {String} key Object key could be a String or Integer\n * @param {String} value Object value could be a String or Integer\n */\nexport function getObjectByKey(arrayObject, key, value) {\n    return arrayObject.find(obj => obj[ key ] === value);\n}\n\nexport function getSettings(arrObj = [{}], value = \"\") {\n    const Obj = arrObj.find(item => item.name === value);\n    const result = Obj.value;\n    return result;\n}\n\n/**\n * @description addToArrayOfObjects add a new object item to an array of objects\n * @param {Object} arrayOfObjects the array of object\n * @param {Number} limit maximum number of objects the array should not exceed\n * @param {Object} newObjectElement the new item to be added to the array of objects\n * @returns {Object} the new array of Objects\n */\nexport function addToArrayOfObjects(arrayOfObjects, limit, newObjectElement) {\n    const size = Object.keys(arrayOfObjects).length;\n    if (size < limit) {\n        arrayOfObjects.push(newObjectElement);\n    } else {\n    // arr.splice(indexToRemove, numToRemove)\n        arrayOfObjects.splice(0, 1);\n        arrayOfObjects.push(newObjectElement);\n    }\n    return arrayOfObjects;\n}\n\n/**\n * @description getClientAccess get the Ip Address and TimeSTamp of a request object.\n * @param {String} req the request object\n * @returns {Object} { accessDate, ipAddress } access date and the ip address\n */\nexport function getClientAccess(req) {\n    const ipAddress = req.ip || req._remoteAddress;\n    // const lang = req.get(\"accept-language\");\n    const accessDate = req._startTime || \"\";\n    return { accessDate, ipAddress };\n}\n\nexport function hasProp(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function isObjecId(id) {\n    if (id.match(/^[0-9a-fA-F]{24}$/)) return true;\n    return false;\n}\n\n/**\n * @returns a five-digit random number\n */\nexport function generateOtp() {\n    const num = Math.floor(Math.random() * 90000) + 10000;\n    return num;\n}\n\nexport function hash(str = \"\") {\n    return bcryptjs.hashSync(str, JWT.saltRounds);\n}\n\nexport function cleanDeepObject(obj) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const propName in obj) {\n        if (!obj[ propName ] || obj[ propName ].length === 0) {\n            delete obj[ propName ];\n        } else if (typeof obj === \"object\") {\n            cleanDeepObject(obj[ propName ]);\n        }\n    }\n    return obj;\n}\n\nlet depth = 0;\n\n// eslint-disable-next-line complexity\nexport function cleanObject(obj) {\n    depth += 1;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const propName in obj) {\n        if (!obj[ propName ] || obj[ propName ].length === 0) {\n            delete obj[ propName ];\n        } else if (typeof obj === \"object\") {\n            if (depth <= 3) cleanObject(obj[ propName ]);\n        }\n    }\n    return obj;\n}\n\nexport function nextDate(d = 1) {\n    return new Date(new Date().setDate(new Date().getDate() + d));\n}\n\nfunction genString(length) {\n    let text = \"\";\n    // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const possible = \"ABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nfunction daysIntoYear(date = new Date()) {\n    // eslint-disable-next-line max-len\n    return (Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) - Date.UTC(date.getFullYear(), 0, 0)) / 24 / 60 / 60 / 1000;\n}\n\nexport function genCode(len = 9) {\n    let d = new Date().getFullYear().toString().substr(-2);\n    d += daysIntoYear();\n    if (len - d.length > 0) return d + genString(len - d.length);\n    return genString(len);\n}\n\nexport function hasNull(Obj = {}) {\n    const val = Object.values(Obj);\n    if (val.includes(null) || val.includes(undefined) || val.includes(\"\")) return true;\n    return false;\n}\n\nexport function stringToArrayPhone(str) {\n    const arr = str.split(\",\").map(st => st.trim()); // remove spaces\n    // eslint-disable-next-line func-names\n    const filtered = arr.filter(function(value, index, arr) {\n      return (value.length >= 11 && value.length < 15);\n    });\n    return [...new Set(filtered)]; // Remove duplicates\n}\n"]}