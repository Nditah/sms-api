{"version":3,"sources":["../../../src/api/user/model.js"],"names":["Schema","mongoose","ObjectId","Types","schemaLogin","Joi","object","email","string","optional","phone","otp","password","schemaCreate","type","valid","api_key","trim","min","title","surname","given_name","gender","phone_personal","address","country_iso2","created_by","required","schemaUpdate","api_access","boolean","otp_count","number","otp_access","updated_by","schema","String","enum","uppercase","default","lowercase","unique","Boolean","Object","values","GENDER","MALE","alias","match","confirmed_email","confirmed_phone","Number","credit","notifications","ref","transactions","tickets","remark","deleted","deleted_at","Date","deleted_by","blocked","blocked_at","blocked_by","last_login","last_ip","preload","DATABASE","PRELOAD_TABLE_DATA","DEFAULT","options","OPTIONS","newSchema","index","set","User","model","findOne","then","user","console","log","table","newRecord","newRecord2","save","catch","__dirname","err","message","insertMany"],"mappings":"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","file":"model.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/**\n * @author 4Deapi_keyr\n * @property {String} id User ObjectId primaryKey\n * @property {String} type User type (optional)\n * @property {String} api_key User api access key (prohibited)\n * @property {Boolean} api_access User api_access (optional)\n * @property {String} title User title (optional)\n * @property {String} surname User surname (required)\n * @property {String} given_name User given_name (required)\n * @property {String} gender User gender (required)\n * @property {String} phone User office phone (required)\n * @property {String} phone_personal User phone_personal (optional)\n * @property {String} address User address (optional)\n * @property {String} country_iso2 User country_iso2 (optional)\n * @property {String} email User email (optional)\n * @property {String} password User password (optional)\n * @property {String} otp User otp (optional)\n * @property {Number} otp_count User otp_count (optional)\n * @property {Boolean} otp_access User otp_access (optional)\n * @property {Number} credit User credit (optional)\n * @property {Array} notifications User notifications (optional)\n * @property {String} remark User remark (optional)\n * @property {Boolean} deleted User deleted (prohibited)\n * @property {Date} deleted_at User deleted_at (prohibited)\n * @property {String} deleted_by User deleted_by (prohibited)\n * @property {Boolean} blocked User blocked (prohibited)\n * @property {Date} blocked_at User blocked_at (prohibited)\n * @property {String} blocked_by User blocked_by (prohibited)\n * @property {Date} last_login User last_login (prohibited)\n * @property {String} last_ip User last_ip (prohibited)\n * @property {String} created_by User record created by\n * @property {String} updated_by User record modified by\n * @description User holds record of all cities with school_list\n */\nimport Joi from \"@hapi/joi\";\nimport mongoose from \"mongoose\";\nimport { DATABASE, GENDER } from \"../../constants\";\nimport table from \"./table\";\nimport Notification from \"../notification/model\";\nimport Transaction from \"../transaction/model\";\nimport Ticket from \"../ticket/model\";\nimport { genCode } from \"../../lib/helpers\";\n\nconst { Schema } = mongoose;\nconst { ObjectId } = Schema.Types;\n\nexport const schemaLogin = Joi.object({\n    email: Joi.string().email().optional(),\n    phone: Joi.string().optional(),\n    otp: Joi.string().optional(),\n    password: Joi.string().optional(),\n});\n\nexport const schemaCreate = Joi.object({\n    type: Joi.string().valid(\"CUSTOMER\", \"ADMIN\").optional(),\n    api_key: Joi.string().trim().min(32).optional(),\n    title: Joi.string().optional(),\n    surname: Joi.string().optional(),\n    given_name: Joi.string().optional(),\n    gender: Joi.string().valid(\"MALE\", \"FEMALE\").optional(),\n    phone: Joi.string().trim().optional(),\n    phone_personal: Joi.string().trim().optional(),\n    address: Joi.string().optional(),\n    country_iso2: Joi.string().optional(),\n    email: Joi.string().trim().email().optional(),\n    password: Joi.string().trim().optional(),\n    created_by: Joi.string().required(),\n});\n\nexport const schemaUpdate = Joi.object({\n    type: Joi.string().valid(\"CUSTOMER\", \"ADMIN\").optional(),\n    api_key: Joi.string().trim().min(32).optional(),\n    api_access: Joi.boolean().optional(),\n    title: Joi.string().optional(),\n    surname: Joi.string().optional(),\n    given_name: Joi.string().optional(),\n    gender: Joi.string().valid(\"MALE\", \"FEMALE\").optional(),\n    phone: Joi.string().trim().optional(),\n    phone_personal: Joi.string().trim().optional(),\n    address: Joi.string().optional(),\n    country_iso2: Joi.string().optional(),\n    email: Joi.string().trim().email().optional(),\n    password: Joi.string().trim().optional(),\n    otp: Joi.string().trim().optional(),\n    otp_count: Joi.number().optional(),\n    otp_access: Joi.boolean().optional(),\n    updated_by: Joi.string().required(),\n});\n\nexport const schema = {\n    type: {\n        type: String,\n        enum: [\"CUSTOMER\", \"ADMIN\"],\n        trim: true,\n        uppercase: true,\n        required: true,\n        default: \"CUSTOMER\",\n    },\n    api_key: { type: String, trim: true, lowercase: true, unique: true },\n    api_access: { type: Boolean, default: false },\n    title: { type: String },\n    surname: { type: String, required: [false, \"Why no surname?\"] },\n    given_name: { type: String, required: [false, \"Why no given_name?\"] },\n    gender: {\n        type: String,\n        enum: Object.values(GENDER),\n        default: GENDER.MALE,\n        required: [false, \"Why no gender?\"],\n    },\n    phone: {\n        type: String,\n        required: [false, \"Why no offical phone?\"],\n        unique: true,\n        alias: \"phone_office\",\n    },\n    phone_personal: {\n        type: String,\n        required: [false, \"Why no personal phone?\"],\n        alias: \"phone_home\",\n    },\n    address: { type: String },\n    country_iso2: { type: String, required: [false, \"Why no input?\"], default: \"ng\" },\n    email: {\n        type: String,\n        trim: true,\n        lowercase: true,\n        unique: true,\n        // eslint-disable-next-line no-useless-escape\n        match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n            \"Please fill a valid email address\"],\n    },\n    password: { type: String },\n    confirmed_email: { type: Boolean, default: false },\n    confirmed_phone: { type: Boolean, default: false },\n    otp: { type: String },\n    otp_count: { type: Number, required: [false, \"Why no input?\"], default: 0 },\n    otp_access: { type: Boolean, default: false },\n    credit: { type: Number, default: 2.0 }, // SMS Unit\n    notifications: [{ type: ObjectId, ref: \"Notification\" }],\n    transactions: [{ type: ObjectId, ref: \"Transaction\" }],\n    tickets: [{ type: ObjectId, ref: \"Ticket\" }],\n    remark: { type: String },\n    deleted: { type: Boolean, default: false, required: true },\n    deleted_at: { type: Date },\n    deleted_by: { type: ObjectId, ref: \"User\" },\n    blocked: { type: Boolean, default: false, required: true },\n    blocked_at: { type: Date },\n    blocked_by: { type: ObjectId, ref: \"User\" },\n    last_login: { type: Date },\n    last_ip: { type: String },\n    created_by: { type: ObjectId, ref: \"User\" },\n    updated_by: { type: ObjectId, ref: \"User\" },\n};\n\nconst preload = DATABASE.PRELOAD_TABLE_DATA.DEFAULT;\nconst options = DATABASE.OPTIONS;\n\nconst newSchema = new Schema(schema, options);\nnewSchema.index({ phone: 1, email: 1 }, { unique: true });\nnewSchema.set(\"collection\", \"user\");\n\nconst User = mongoose.model(\"User\", newSchema);\n\nUser.findOne({ email: \"nditah@gmail.com\" })\n    .then((user) => {\n        if (!user) {\n            console.log(table[ 0 ]);\n            const newRecord = new User(table[ 0 ]);\n            const newRecord2 = new User(table[ 1 ]);\n            newRecord.save();\n            newRecord2.save();\n        }\n    })\n    .catch(err => console.log(__dirname, err.message));\n\nif (preload) { User.insertMany(table); }\n\nexport default User;\n"]}